(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{331:function(t,s,a){"use strict";a.r(s);var e=a(14),r=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"图片渲染器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#图片渲染器"}},[t._v("#")]),t._v(" 图片渲染器")]),t._v(" "),s("p",[t._v("若你的插件中有存在"),s("strong",[t._v("发送自定义图片")]),t._v("的指令，那么你可能需要用到图片渲染器这个功能。")]),t._v(" "),s("h2",{attrs:{id:"注册图片渲染器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注册图片渲染器"}},[t._v("#")]),t._v(" 注册图片渲染器")]),t._v(" "),s("p",[t._v("图片渲染器本质为通过 "),s("a",{attrs:{href:"https://pptr.dev/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Puppeteer"),s("OutboundLink")],1),t._v(" 来打开指定路径的网页，并对指定的元素进行截图，并得到图片的 "),s("code",[t._v("base64")]),t._v(" 格式内容。")]),t._v(" "),s("h3",{attrs:{id:"常规注册方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常规注册方式"}},[t._v("#")]),t._v(" 常规注册方式")]),t._v(" "),s("p",[t._v("可通过 "),s("code",[t._v("renderer.register")]),t._v(" 来注册得到一个图片渲染器，它的类型与使用方式如下：")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RenderMethods")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("register")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" route"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" defaultSelector"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Renderer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注册渲染器")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" renderer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" bot"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("renderer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("register")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/test-plugin"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#app"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 截取路径 /test-plugin/test.html 的网页中 id 为 app 的元素，并得到图片的 base64 格式")]),t._v("\nrenderer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("asBase64")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/test.html"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[t._v("route: 渲染器基地址，若你的所有待渲染页面均存在一个共同的基地址，可将其配置在此项，避免后续编写重复内容。反之请设置为 "),s("code",[t._v("/")]),t._v("；")]),t._v(" "),s("li",[t._v("defaultSelector: 渲染器的默认 css 选择器，用于指定要在页面中截图的内容。")])]),t._v(" "),s("p",[t._v("对于 "),s("code",[t._v("route")]),t._v(" 参数，分为两种情况：")]),t._v(" "),s("ul",[s("li",[t._v("当使用框架集成的 vue-router 时，建议传递"),s("strong",[t._v("插件名称")])]),t._v(" "),s("li",[t._v("当使用框架集成的静态资源服务器时，建议传递以 "),s("code",[t._v("plugins")]),t._v(" 目录为基准的页面所在的目录路径，如 "),s("code",[t._v("/genshin/views")])])]),t._v(" "),s("h3",{attrs:{id:"renderregister"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#renderregister"}},[t._v("#")]),t._v(" renderRegister")]),t._v(" "),s("p",[t._v("我们还为插件提供了更方便的渲染器注册方法，你可以在插件的 "),s("code",[t._v("mounted")]),t._v(" 生命周期钩子中使用 "),s("code",[t._v("params.renderRegister")]),t._v(" 来直接注册渲染器。")]),t._v(" "),s("p",[t._v("该方法仅需要 "),s("code",[t._v("defaultSelector")]),t._v(" 一个参数，它将会自动获取插件根目录名称，以 "),s("code",[t._v("/插件目录名")]),t._v(" 的格式作为基地址参数 "),s("code",[t._v("route")]),t._v(" 向 "),s("code",[t._v("bot.renderer.register")]),t._v(" 传递。")]),t._v(" "),s("p",[t._v("示例如下：")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* test-plugin 插件 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("definePlugin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mounted")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" params "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        renderer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" params"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("renderRegister")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#app"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等同于")]),t._v("\n        render "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" params"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("renderer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("register")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/test-plugin"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#app"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"渲染器方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#渲染器方法"}},[t._v("#")]),t._v(" 渲染器方法")]),t._v(" "),s("p",[t._v("我们为渲染器提供了三种渲染方法，类型如下：")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ScreenshotRendererMethods")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("asBase64")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" route"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" params"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Record"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" viewPort"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" puppeteer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Viewport "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" selector"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("RenderResult"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("asSegment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" route"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" params"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Record"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" viewPort"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" puppeteer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Viewport "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" selector"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("RenderResult"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("asForFunction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" route"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pageFunction"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" PageFunction"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" viewPort"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" puppeteer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Viewport "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" params"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Record"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("RenderResult"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("这里对三种方法共同拥有的参数做出说明：")]),t._v(" "),s("ul",[s("li",[t._v("route: 要打开的目标网站地址，相对于上面注册渲染器时提供的基地址而定。如目标地址为 "),s("code",[t._v("/test-plugin/test.html")]),t._v("，基地中定义了 "),s("code",[t._v("/test-plugin")]),t._v("，那么这里只需要指定为 "),s("code",[t._v("/test.html")]),t._v(" 即可。")]),t._v(" "),s("li",[t._v("viewPort: 可选参数，用于设置页面的视口，详见 "),s("a",{attrs:{href:"https://pptr.dev/api/puppeteer.viewport",target:"_blank",rel:"noopener noreferrer"}},[t._v("Viewport interface"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("li",[t._v("params: 可选参数，对象格式，将被格式化为 "),s("code",[t._v("a=x&b=x")]),t._v(" 的键值对格式跟随在 "),s("code",[t._v("route")]),t._v(" 后，作为查询参数使用。")])]),t._v(" "),s("p",[t._v("三者存在共同的返回值类型 "),s("code",[t._v("RenderResult")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RenderSuccess")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    code"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ok"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Sendable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RenderError")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    code"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    error"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RenderResult")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" RenderSuccess "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" RenderError"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("即当渲染成功时，返回包含 "),s("code",[t._v("code")]),t._v(" 与 截图内容 "),s("code",[t._v("data")]),t._v(" 的对象，"),s("code",[t._v("code")]),t._v(" 值为 "),s("code",[t._v("ok")]),t._v("。反之为包含 "),s("code",[t._v("code")]),t._v(" 与 错误提示消息 "),s("code",[t._v("error")]),t._v(" 的对象，"),s("code",[t._v("code")]),t._v(" 值为 "),s("code",[t._v("error")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"asbase64"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#asbase64"}},[t._v("#")]),t._v(" asBase64")]),t._v(" "),s("p",[t._v("存在 "),s("code",[t._v("selector")]),t._v(" 参数，用于覆盖注册渲染器时所设置的默认 css 选择器。")]),t._v(" "),s("p",[t._v("当截图成功时，其返回的 "),s("code",[t._v("data")]),t._v(" 永远为 "),s("code",[t._v("string")]),t._v(" 类型，即 base64 字符串。")]),t._v(" "),s("h3",{attrs:{id:"assegment"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#assegment"}},[t._v("#")]),t._v(" asSegment")]),t._v(" "),s("p",[t._v("参数与 "),s("a",{attrs:{href:"#asbase64"}},[t._v("asBase64")]),t._v(" 完全一直，返回值类型有所不同。")]),t._v(" "),s("p",[t._v("此方法返回的 "),s("code",[t._v("data")]),t._v(" 为 "),s("code",[t._v("ImageElem")]),t._v(" 类型数据，可直接使用 "),s("code",[t._v("sendMessage")]),t._v(" 发送或填入数组与其他可发送类型组合后使用 "),s("code",[t._v("sendMessage")]),t._v(" 发送。")]),t._v(" "),s("h3",{attrs:{id:"asforfunction"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#asforfunction"}},[t._v("#")]),t._v(" asForFunction")]),t._v(" "),s("p",[t._v("此方法旨在满足开发者开放式的截图渲染需求，其接受一个允许开发者进行自定义行为的方法 "),s("code",[t._v("pageFunction")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PageFunction")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" page"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" puppeteer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Page "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Buffer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("该方法接受一个 "),s("a",{attrs:{href:"https://pptr.dev/api/puppeteer.page",target:"_blank",rel:"noopener noreferrer"}},[t._v("puppeteer.Page"),s("OutboundLink")],1),t._v(" 类型的参数 "),s("code",[t._v("page")]),t._v("，该参数是 puppeteer 中的页面对象，支持对当前页面进行几乎所有人工可以完成的操作。")]),t._v(" "),s("p",[t._v("当执行完编写的自定义行为后，你需要在此参数方法中返回一个 "),s("code",[t._v("Buffer | string | void")]),t._v(" 类型的数据，这个数据将会通过 "),s("code",[t._v("toString")]),t._v(" 处理后，作为 "),s("code",[t._v("asForFunction")]),t._v(" 的返回值中的 "),s("code",[t._v("data")]),t._v(" 内容进行返回。")]),t._v(" "),s("blockquote",[s("p",[t._v("若你未在 pageFunction 方法中返回任何内容，即 "),s("code",[t._v("void")]),t._v(" 返回值类型，那么在最终的 "),s("code",[t._v("data")]),t._v(" 属性中你将得到一个空字符串值 "),s("code",[t._v('""')]),t._v("。")])])])}),[],!1,null,null,null);s.default=r.exports}}]);