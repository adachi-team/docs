(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{308:function(t,a,s){"use strict";s.r(a);var e=s(14),r=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"部署-adachi-所适配的-go-cqhttp-的正确姿势"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部署-adachi-所适配的-go-cqhttp-的正确姿势"}},[t._v("#")]),t._v(" 部署 Adachi 所适配的 go-cqhttp 的正确姿势")]),t._v(" "),a("h2",{attrs:{id:"go-cqhttp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#go-cqhttp"}},[t._v("#")]),t._v(" go-cqhttp")]),t._v(" "),a("p",[t._v("Adachi-BOT 目前与 "),a("a",{attrs:{href:"https://docs.go-cqhttp.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("go-cqhttp"),a("OutboundLink")],1),t._v(" 单独对接。鉴于 qq bot 的当前环境，未来可能实现对 "),a("code",[t._v("matrix")]),t._v(" 协议的对接。")]),t._v(" "),a("h3",{attrs:{id:"下载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#下载"}},[t._v("#")]),t._v(" 下载")]),t._v(" "),a("p",[t._v("go-cqhttp 目前存在两个版本，稳定版和开发版，下载地址分别如下：")]),t._v(" "),a("ul",[a("li",[t._v("稳定版："),a("a",{attrs:{href:"https://github.com/Mrs4s/go-cqhttp/releases/tag/v1.1.0",target:"_blank",rel:"noopener noreferrer"}},[t._v("v1.1.0"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("开发版："),a("a",{attrs:{href:"https://github.com/Mrs4s/go-cqhttp/releases/tag/v1.2.0",target:"_blank",rel:"noopener noreferrer"}},[t._v("v1.2.0"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("需要根据自己环境在 "),a("code",[t._v("Assets")]),t._v(" 中确定需要下载的编译包。下载完毕后解压至一个目录。")]),t._v(" "),a("h3",{attrs:{id:"部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部署"}},[t._v("#")]),t._v(" 部署")]),t._v(" "),a("p",[t._v("切换到解压后的目录，执行命令运行 "),a("code",[t._v("go-cqhttp")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("./go-cqhttp\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# windows")]),t._v("\ngo-cqhttp.exe\n")])])]),a("p",[t._v("执行后将会提示选择需要的通讯方式，这里输入 "),a("code",[t._v("2")]),t._v(" （正向 Websocket 通信）并回车.")]),t._v(" "),a("p",[t._v("等待片刻后程序将会退出，且在当前目录生成 "),a("code",[t._v("config.yml")]),t._v(" 配置文件。我们需要对这个配置文件的部分内容进行编辑:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("account.uin")]),t._v(": 待登录的 qq 号")]),t._v(" "),a("li",[a("code",[t._v("account.password")]),t._v(": 待登录的 qq 密码")]),t._v(" "),a("li",[a("code",[t._v("account.sign-serv")]),t._v("er`: 两版本的 go-cqhttp 的此配置项不同，暂时不进行修改，下面 "),a("a",{attrs:{href:"#qsign"}},[t._v("qsign")]),t._v(" 部分将会说明。")]),t._v(" "),a("li",[a("code",[t._v("servers.ws.address: 将")]),t._v("0.0.0.0:8080"),a("code",[t._v("中的")]),t._v("8080"),a("code",[t._v("，修改为自己期望 go-cqhttp 运行的端口，需要与")]),t._v("Adachi-BOT"),a("code",[t._v("的配置项")]),t._v("base.yml => wsServer` 的端口所对应。")])]),t._v(" "),a("p",[t._v("配置完毕后再次运行上面的启动命令。go-cqhttp 将会开始尝试登录，此时根目录下会生成一个 "),a("code",[t._v("device.json")]),t._v(" 设备文件，对于稳定版 "),a("code",[t._v("go-cqhttp")]),t._v("，文档下方将会用到这个文件。")]),t._v(" "),a("p",[t._v("现在回到正在进行登录的命令行窗口，如果不出意外，那么就一定会出意外了。你将会喜闻乐见的在窗口中看到一行：")]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("登录失败: 登录失败，请前往QQ官网im.qq.com下载最新版QQ后重试，或通过问题反馈与我们联系。 Code: 45\n")])])]),a("p",[t._v("那么就得不得不配置下面的 "),a("code",[t._v("qsign")]),t._v(" 了。 "),a("s",[t._v("如果你真的运气很好登陆成功了，那么也可以忽略这一步，只是这种幸运不会持续太久就是了")])]),t._v(" "),a("h2",{attrs:{id:"qsign"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#qsign"}},[t._v("#")]),t._v(" qsign")]),t._v(" "),a("p",[t._v("qsign 是一个神奇的 Sign API，由 "),a("s",[a("a",{attrs:{href:"https://github.com/fuqiuluo/unidbg-fetch-qsign",target:"_blank",rel:"noopener noreferrer"}},[t._v("fuqiuluo/unidbg-fetch-qsign"),a("OutboundLink")],1)]),t._v(" 提供。"),a("br"),t._v("\n原作者因不可抗力问题已删库，目前这个方式还能坚持多久还是未知数。")]),t._v(" "),a("h2",{attrs:{id:"环境准备"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#环境准备"}},[t._v("#")]),t._v(" 环境准备")]),t._v(" "),a("ol",[a("li",[t._v("安装 "),a("code",[t._v("jdk1.8")]),t._v(" 环境，这个百度都有。")]),t._v(" "),a("li",[t._v("针对上面 go-cqhttp 的稳定版和开发版，这里我们会用到的两个版本的编译包："),a("RouterLink",{attrs:{to:"/extra/"}},[t._v("1.1.0")]),t._v("、"),a("RouterLink",{attrs:{to:"/extra/"}},[t._v("1.1.9")]),t._v("。对应关系为 "),a("code",[t._v("稳定版 => 1.1.0")]),t._v("、"),a("code",[t._v("开发版 => 1.1.9")]),t._v("，根据需求取其一即可，下载后解压至一个目录。")],1)]),t._v(" "),a("h2",{attrs:{id:"部署-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部署-2"}},[t._v("#")]),t._v(" 部署")]),t._v(" "),a("p",[t._v("1.1.0 和 1.1.9 的部署方式不尽相同，这里分开说明。")]),t._v(" "),a("h3",{attrs:{id:"_1-1-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-0"}},[t._v("#")]),t._v(" 1.1.0")]),t._v(" "),a("p",[t._v("首先进入 "),a("code",[t._v("txlib\\8.9.63")]),t._v(" 目录，将 "),a("code",[t._v("config.json => server.port")]),t._v(" 修改为你希望 qsign 所运行的端口。")]),t._v(" "),a("p",[t._v("然后回到根目录，执行命令启动 qsign:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# windows 下将 bin/unidbg-fetch-qsign.bat 改为 bin\\unidbg-fetch-qsign.bat")]),t._v("\nbin/unidbg-fetch-qsign.bat "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--host")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.0.0.0"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--port")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11451")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--count")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--library")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("txlib/8.9.63 "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--android_id")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("45d4fa9c393ed6fb\n")])])]),a("p",[t._v("需要对命令中的一些部分稍作修改：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("server.port")]),t._v(": 改为刚刚在 "),a("code",[t._v("config.json")]),t._v(" 中设置的内容")]),t._v(" "),a("li",[a("code",[t._v("count")]),t._v(": 并发数，如果希望多个 go-cqhttp 连接，则设置高一些")]),t._v(" "),a("li",[a("code",[t._v("android_id")]),t._v(": 打开上面 go-cqhttp 稳定版中根目录中生成的 "),a("code",[t._v("device.json")]),t._v("，找到 "),a("code",[t._v("android_id")]),t._v(" 属性，将属性值填入此处")])]),t._v(" "),a("p",[t._v("启动成功后，回到 go-cqhttp 的目录，打开 "),a("code",[t._v("config.yml")]),t._v("，修改 "),a("code",[t._v("account.sign-server")]),t._v(" 的内容：")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 11451 改为刚刚配置的 qsign 服务端口")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("sign-server")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://127.0.0.1:11451'")]),t._v("\n")])])]),a("h3",{attrs:{id:"_1-1-9"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-9"}},[t._v("#")]),t._v(" 1.1.9")]),t._v(" "),a("p",[t._v("同样进入 "),a("code",[t._v("txlib\\8.9.63")]),t._v(" 目录，打开 "),a("code",[t._v("config.json")]),t._v(" 进行修改。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("server.port")]),t._v(": 修改为你希望 qsign 所运行的端口")]),t._v(" "),a("li",[a("code",[t._v("key")]),t._v(": 修改为随意数字，不修改也行，记住它的值")]),t._v(" "),a("li",[a("code",[t._v("auto_register")]),t._v(": 设置为 "),a("code",[t._v("true")])])]),t._v(" "),a("p",[t._v("回到根目录，执行命令启动 qsign:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# windows 下将 bin/unidbg-fetch-qsign.bat 改为 bin\\unidbg-fetch-qsign.bat")]),t._v("\nbin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("unidbg-fetch-qsign.bat "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--basePath")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("txlib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8.9")]),t._v(".63\n")])])]),a("p",[t._v("启动成功后，回到 go-cqhttp 的目录，打开 "),a("code",[t._v("config.yml")]),t._v("，修改 "),a("code",[t._v("account.sign-server")]),t._v(" 的内容：")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("sign-servers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://127.0.0.1:11451'")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 11451 唏嘘改为刚刚配置的 qsign 服务端口")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1919810'")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 上面 qsign config.json 中的 key 值")]),t._v("\n")])])]),a("h2",{attrs:{id:"linux-的后台静默部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linux-的后台静默部署"}},[t._v("#")]),t._v(" linux 的后台静默部署")]),t._v(" "),a("p",[t._v("不管是 qsign 还是 go-cqhttp，部署后的命令行窗口都不可以关闭。对于 windows 来说这是无关痛痒的问题，但 linux 则需要采取一些小手段。")]),t._v(" "),a("p",[t._v("这里仅以 screen 为例来解决这个问题：")]),t._v(" "),a("p",[t._v("安装 screen（centOS）:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("yum "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("screen")]),t._v("\n")])])]),a("p",[t._v("在启动 go-cqhttp 或 qsign 之前，先执行命令：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("screen")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-S")]),t._v(" 服务名称\n")])])]),a("p",[t._v("之后会进入一个新的视窗，在此处执行 go-cqhttp 或 qsign 的启动命令")]),t._v(" "),a("p",[t._v("之后通过快捷键 "),a("code",[t._v("ctrl+a+d")]),t._v(" 快捷键退出当前视窗，以同种方式启动另一个服务")]),t._v(" "),a("p",[t._v("再次进入视窗时可以执行：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("screen")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-r")]),t._v(" 服务名称\n")])])]),a("p",[t._v("一些其他 screen 命令可以参考："),a("a",{attrs:{href:"https://www.runoob.com/linux/linux-comm-screen.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("screen 命令"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"后续留言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#后续留言"}},[t._v("#")]),t._v(" 后续留言")]),t._v(" "),a("p",[t._v("配置完毕后，再次启动 go-cqhttp 就可以正常登陆了。"),a("s",[t._v("如果还是 45 报错，那么换号或者与 qqbot 说再见吧")])]),t._v(" "),a("p",[t._v("通常情况下建议部署开发版，稳定版由于仅能使用 "),a("code",[t._v("1.1.0")]),t._v(" 版本的 "),a("code",[t._v("qsign")]),t._v("，较容易被冻结。一旦冻结两次后基本就会永久 "),a("code",[t._v("45")]),t._v("，这个号彻底和 qq bot 说再见了。"),a("br"),t._v("\n而开发版相对来说存活更长久一些。")]),t._v(" "),a("p",[t._v("但不管是哪一种，qq bot 都在生命倒计时了，只能说有缘再见了。")])])}),[],!1,null,null,null);a.default=r.exports}}]);