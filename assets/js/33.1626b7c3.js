(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{307:function(t,e,a){"use strict";a.r(e);var s=a(14),r=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"部署-adachi-所适配的实现端的正确姿势"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#部署-adachi-所适配的实现端的正确姿势"}},[t._v("#")]),t._v(" 部署 Adachi 所适配的实现端的正确姿势")]),t._v(" "),e("p",[t._v("Adachi-BOT 目前已经接入了 "),e("a",{attrs:{href:"https://github.com/botuniverse/onebot-11",target:"_blank",rel:"noopener noreferrer"}},[t._v("onebot-11 标准"),e("OutboundLink")],1),t._v("，基于 OneBot-11 标准的实现端均可以使用，可以在"),e("a",{attrs:{href:"https://onebot.dev/ecosystem.html#onebot-%E5%AE%9E%E7%8E%B0-1",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),e("OutboundLink")],1),t._v("查看。")]),t._v(" "),e("p",[t._v("这里以 "),e("a",{attrs:{href:"https://docs.go-cqhttp.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("go-cqhttp"),e("OutboundLink")],1),t._v(" 为例。")]),t._v(" "),e("h2",{attrs:{id:"qsign"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#qsign"}},[t._v("#")]),t._v(" qsign")]),t._v(" "),e("p",[t._v("qsign 是一个神奇的 Sign API，由 "),e("s",[e("a",{attrs:{href:"https://github.com/fuqiuluo/unidbg-fetch-qsign",target:"_blank",rel:"noopener noreferrer"}},[t._v("fuqiuluo/unidbg-fetch-qsign"),e("OutboundLink")],1)]),t._v(" 提供。"),e("br"),t._v("\n原作者因不可抗力问题已删库，目前这个方式还能坚持多久还是未知数。")]),t._v(" "),e("p",[t._v("虽然讲的是实现端的部署，但 qsign 是一个绕不开的工具，不使用 "),e("code",[t._v("ntqq")]),t._v(" 实现端或 "),e("code",[t._v("qsign")]),t._v(" 时登录账号大概率会喜闻乐见的看到如下报错:")]),t._v(" "),e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("登录失败: 请前往QQ官网im.qq.com下载最新版QQ后重试，或通过问题反馈与我们联系。 Code: 45\n")])])]),e("p",[t._v("如果你使用的是 "),e("a",{attrs:{href:"https://github.com/whitechi73/OpenShamrock",target:"_blank",rel:"noopener noreferrer"}},[t._v("OpenShamrock"),e("OutboundLink")],1),t._v(" 等基于 "),e("code",[t._v("ntqq")]),t._v(" 的实现端，可跳过此节内容。")]),t._v(" "),e("h2",{attrs:{id:"环境准备"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#环境准备"}},[t._v("#")]),t._v(" 环境准备")]),t._v(" "),e("ol",[e("li",[t._v("安装 "),e("code",[t._v("jdk1.8")]),t._v(" 环境，这个百度都有。")]),t._v(" "),e("li",[t._v("下载 "),e("a",{attrs:{href:"https://github.com/adachi-team/docs/releases/latest/download/1.1.9.zip",target:"_blank",rel:"noopener noreferrer"}},[t._v("1.1.9"),e("OutboundLink")],1),t._v(" 版本的编译包，下载后解压至一个目录。（注：如果下载速度缓慢或无法下载，请使用 GitHub 下载代理工具）。")])]),t._v(" "),e("h2",{attrs:{id:"部署"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#部署"}},[t._v("#")]),t._v(" 部署")]),t._v(" "),e("p",[t._v("打开 "),e("code",[t._v("txlib")]),t._v(" 目录后这里有多个版本，"),e("code",[t._v("go-cqhttp v1.2.0")]),t._v(" 仅支持使用 "),e("code",[t._v("8.9.63")]),t._v(" 版本，其他的例如 "),e("a",{attrs:{href:"https://github.com/lc-cn/onebots",target:"_blank",rel:"noopener noreferrer"}},[t._v("onebots"),e("OutboundLink")],1),t._v(" 则对版本无要求。")]),t._v(" "),e("p",[t._v("无特殊需要的情况下最稳定的版本依然是 "),e("code",[t._v("8.9.63")]),t._v("，个别 QQ 账号会提示版本过低，此时需要选择更高版本的 "),e("code",[t._v("txlib")]),t._v("。")]),t._v(" "),e("p",[t._v("这里以 "),e("code",[t._v("8.9.63")]),t._v(" 版本为例，其他版本配置基本相同。")]),t._v(" "),e("p",[t._v("进入 "),e("code",[t._v("txlib\\8.9.63")]),t._v(" 目录，打开 "),e("code",[t._v("config.json")]),t._v(" 进行修改。")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("server.port")]),t._v(": 修改为你希望 qsign 所运行的端口")]),t._v(" "),e("li",[e("code",[t._v("key")]),t._v(": 修改为随意数字，不修改也行，记住它的值")]),t._v(" "),e("li",[e("code",[t._v("auto_register")]),t._v(": 设置为 "),e("code",[t._v("true")])])]),t._v(" "),e("p",[t._v("回到根目录，执行命令启动 qsign:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# linux")]),t._v("\nbin/unidbg-fetch-qsign "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--basePath")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("txlib/8.9.63\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# windows")]),t._v("\nbin"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("unidbg-fetch-qsign.bat "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--basePath")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("txlib"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("8.9")]),t._v(".63\n")])])]),e("p",[t._v("未打印可见报错即表示启动成功。")]),t._v(" "),e("h2",{attrs:{id:"go-cqhttp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#go-cqhttp"}},[t._v("#")]),t._v(" go-cqhttp")]),t._v(" "),e("h3",{attrs:{id:"下载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#下载"}},[t._v("#")]),t._v(" 下载")]),t._v(" "),e("p",[e("code",[t._v("go-cqhttp")]),t._v(" 目前最新版本为 "),e("code",[t._v("v1.2.0")]),t._v("，下载地址: https://github.com/Mrs4s/go-cqhttp/releases/tag/v1.2.0")]),t._v(" "),e("p",[t._v("需要根据自己环境在 "),e("code",[t._v("Assets")]),t._v(" 中确定需要下载的编译包。下载完毕后解压至一个目录。")]),t._v(" "),e("h3",{attrs:{id:"部署-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#部署-2"}},[t._v("#")]),t._v(" 部署")]),t._v(" "),e("p",[t._v("切换到解压后的目录，执行命令运行 "),e("code",[t._v("go-cqhttp")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("./go-cqhttp\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# windows")]),t._v("\ngo-cqhttp.exe\n")])])]),e("p",[t._v("执行后将会提示选择需要的通讯方式，这里输入 "),e("code",[t._v("2")]),t._v(" （正向 Websocket 通信）并回车.")]),t._v(" "),e("p",[t._v("等待片刻后程序将会退出，且在当前目录生成 "),e("code",[t._v("config.yml")]),t._v(" 配置文件。我们需要对这个配置文件的部分内容进行编辑:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("account.uin")]),t._v(": 待登录的 qq 号")]),t._v(" "),e("li",[e("code",[t._v("account.password")]),t._v(": 待登录的 qq 密码")]),t._v(" "),e("li",[e("code",[t._v("account.sign-server")]),t._v(": 填入上面 "),e("a",{attrs:{href:"#qsign"}},[t._v("qsign")]),t._v(" 部分中所部署的 qsign 服务地址与对应的 key，示例:")])]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("sign-servers")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("url")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://127.0.0.1:11451'")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 11451 改为刚刚配置的 qsign 服务端口")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1919810'")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 上面 qsign config.json 中的 key 值")]),t._v("\n")])])]),e("ul",[e("li",[e("code",[t._v("servers.ws.address")]),t._v(": 将 "),e("code",[t._v("0.0.0.0:8080")]),t._v(" 中的 "),e("code",[t._v("8080")]),t._v("，修改为自己期望 go-cqhttp 运行的端口，这里以默认 "),e("code",[t._v("8080")]),t._v(" 为例。")])]),t._v(" "),e("p",[t._v("配置完毕后再次运行上面的启动命令，go-cqhttp 将会开始尝试登录。当显示下面的打印日志时，说明 qsign 已连接成功:")]),t._v(" "),e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("[INFO]: 使用签名服务器 url=http://127.0.0.1:11451, key=1919810, auth=-\n")])])]),e("p",[t._v("等待 QQ 成功登陆提示，若此时仍提示 "),e("code",[t._v("45 版本过低")]),t._v(" 报错，说明此账号已经无法在 "),e("code",[t._v("8.9.63")]),t._v(" 版本登录，需要 "),e("code",[t._v("qsign")]),t._v(" 使用更高版本的 "),e("code",[t._v("txlib")]),t._v("。")]),t._v(" "),e("p",[t._v("由于 go-cqhttp 仅支持 "),e("code",[t._v("8.9.63")]),t._v("，因此需要选用其他的实现端，例如 "),e("a",{attrs:{href:"https://github.com/lc-cn/onebots",target:"_blank",rel:"noopener noreferrer"}},[t._v("onebots"),e("OutboundLink")],1),t._v("。")]),t._v(" "),e("blockquote",[e("p",[t._v("Windows 用户可尝试使用 "),e("a",{attrs:{href:"https://github.com/rhwong/qsign-onekey",target:"_blank",rel:"noopener noreferrer"}},[t._v("qsign-onekey"),e("OutboundLink")],1),t._v(" 来解决 go-cqhhtp + qsign 的版本过低问题")])]),t._v(" "),e("p",[t._v("登陆成功后，前往 "),e("code",[t._v("Adachi-BOT")]),t._v(" 修改 "),e("code",[t._v("config -> base.yml")]),t._v(" 配置项内容，以连接到 go-cqhttp 实现端:")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# go-cqhttp 默认 api 和 event 服务各自独立运行，因此此处两者均需要配置")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将端口号改为上文中 go-cqhttp 所使用的 ws 端口")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("wsServer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 127.0.0.1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("8080/event\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("wsApiServer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 127.0.0.1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("8080/api\n")])])]),e("p",[t._v("启动 Adachi-BOT，显示 "),e("code",[t._v("已连接到 xxx 事件服务器")]),t._v(" 即代表连接成功。")]),t._v(" "),e("h2",{attrs:{id:"其他实现端注意事项"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#其他实现端注意事项"}},[t._v("#")]),t._v(" 其他实现端注意事项")]),t._v(" "),e("p",[t._v("其他实现端部署时各自参考对应的官方文档部署，部署成功后需要参考"),e("strong",[t._v("日志打印")]),t._v("或"),e("strong",[t._v("文档说明")]),t._v("获取到启动后的 "),e("code",[t._v("event")]),t._v(" 与 "),e("code",[t._v("api")]),t._v(" 服务地址，分别填入 Adachi-BOT 的 "),e("code",[t._v("wsServer")]),t._v(" 与 "),e("code",[t._v("wsApiServer")]),t._v(" 配置项中。")]),t._v(" "),e("p",[t._v("当实现端的 "),e("code",[t._v("event")]),t._v(" 与 "),e("code",[t._v("api")]),t._v(" 服务公用同一个地址时，仅填写 "),e("code",[t._v("wsServer")]),t._v("，"),e("code",[t._v("wsApiServer")]),t._v(" 置空即可。")]),t._v(" "),e("blockquote",[e("p",[t._v("别人实现端就给了一个地址，那肯定就是 "),e("code",[t._v("event")]),t._v(" 与 "),e("code",[t._v("api")]),t._v(" 服务共用这一个了")])]),t._v(" "),e("p",[t._v("示例：")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/lc-cn/onebots",target:"_blank",rel:"noopener noreferrer"}},[t._v("onebots"),e("OutboundLink")],1),t._v(" 可以在启动成功后的日志中得到其 "),e("code",[t._v("api")]),t._v(" 与 "),e("code",[t._v("event")]),t._v(" 公用一个服务，服务地址为："),e("code",[t._v("ip:端口号/icqq/qq号/V11")])]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/whitechi73/OpenShamrock",target:"_blank",rel:"noopener noreferrer"}},[t._v("OpenShamrock"),e("OutboundLink")],1),t._v(" 可在"),e("a",{attrs:{href:"https://whitechi73.github.io/OpenShamrock/api/request-response.html#websocket-%E8%AF%B7%E6%B1%82",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网"),e("OutboundLink")],1),t._v("中得到其有两种服务配置方式:\n"),e("ul",[e("li",[e("code",[t._v("api")]),t._v(" 与 "),e("code",[t._v("event")]),t._v(" 服务共用，地址: "),e("code",[t._v("ip:端口号")])]),t._v(" "),e("li",[e("code",[t._v("event")]),t._v(" 使用 "),e("code",[t._v("ip:端口号")]),t._v("，"),e("code",[t._v("api")]),t._v(" 单独使用 "),e("code",[t._v("ip:端口号/api")])])])])]),t._v(" "),e("h1",{attrs:{id:"linux-的后台静默部署"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linux-的后台静默部署"}},[t._v("#")]),t._v(" linux 的后台静默部署")]),t._v(" "),e("p",[t._v("不管是 qsign 还是 OneBot 实现，部署后的命令行窗口都不可以关闭。对于 windows 来说这是无关痛痒的问题，但 linux 则需要采取一些小手段。")]),t._v(" "),e("p",[t._v("这里仅以 screen 为例来解决这个问题：")]),t._v(" "),e("p",[t._v("安装 screen（centOS）:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("yum "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("screen")]),t._v("\n")])])]),e("p",[t._v("在启动 OneBot 实现或 qsign 之前，先执行命令：")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("screen")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-S")]),t._v(" 服务名称\n")])])]),e("p",[t._v("之后会进入一个新的视窗，在此处执行 OneBot 实现或 qsign 的启动命令")]),t._v(" "),e("p",[t._v("之后通过快捷键 "),e("code",[t._v("ctrl+a+d")]),t._v(" 快捷键退出当前视窗，以同种方式启动另一个服务")]),t._v(" "),e("p",[t._v("再次进入视窗时可以执行：")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("screen")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-r")]),t._v(" 服务名称\n")])])]),e("p",[t._v("一些其他 screen 命令可以参考："),e("a",{attrs:{href:"https://www.runoob.com/linux/linux-comm-screen.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("screen 命令"),e("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=r.exports}}]);