(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{351:function(t,e,r){"use strict";r.r(e);var i=r(14),s=Object(i.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"功能增强"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#功能增强"}},[t._v("#")]),t._v(" 功能增强")]),t._v(" "),e("p",[t._v("v3 解决了 v2 开发的部分痛点并作出了改善与增强，下面是条目摘要。")]),t._v(" "),e("h2",{attrs:{id:"核心库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#核心库"}},[t._v("#")]),t._v(" 核心库")]),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/api/utils/"}},[t._v("新增通用工具类 "),e("code",[t._v("utils")]),t._v("，可按需使用")])],1)]),t._v(" "),e("h2",{attrs:{id:"插件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#插件"}},[t._v("#")]),t._v(" 插件")]),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/guide/plugin/public-server.html"}},[t._v("新增插件配置 "),e("code",[t._v("server")]),t._v("，所有插件共用同一个 "),e("code",[t._v("express")]),t._v(" server")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/guide/plugin/static-resource.html"}},[t._v("新增插件配置 "),e("code",[t._v("assets")]),t._v("，启用线上静态资源自动更新到本地的支持")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/guide/plugin/public-dirs.html"}},[t._v("新增插件配置 "),e("code",[t._v("publicDirs")]),t._v("，对指定目录列表提供静态资源托管")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/guide/plugin/subscribe.html"}},[t._v("新增插件配置 "),e("code",[t._v("subscribe")]),t._v("，对用户的订阅行为进行统一处理")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/guide/plugin/config-file.html"}},[t._v("提供全新的插件配置文件注册方法，插件开发者不再需要手动处理配置文件内容的加载与刷新问题")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/guide/plugin/lifecycle.html#mounted"}},[t._v("新增插件生命周期 "),e("code",[t._v("mounted")]),t._v(" 与 "),e("code",[t._v("unmounted")]),t._v(" 钩子函数")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/guide/plugin/lifecycle.html#setalias"}},[t._v("新增设置插件别名方法 "),e("code",[t._v("setAlias")])])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/guide/plugin/lifecycle.html#renderregister"}},[t._v("新增刷新注册方法 "),e("code",[t._v("refreshRegister")]),t._v("，用于替代原来的 "),e("code",[t._v("bot.refresh.register")])])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/guide/plugin/config-file.html#configregister"}},[t._v("新增浏览器渲染工具类注册方法 "),e("code",[t._v("renderRegister")]),t._v("，为原来的 "),e("code",[t._v("bot.render.register")]),t._v(" 的便捷使用版本")])],1)]),t._v(" "),e("h2",{attrs:{id:"指令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#指令"}},[t._v("#")]),t._v(" 指令")]),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/migration/directive/priority.html"}},[t._v("新的插件指令配置属性 "),e("code",[t._v("priority")]),t._v("，用来指示指令的优先级大小")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/migration/directive/order-match.html"}},[e("code",[t._v("OrderMatchResult")]),t._v(" 类型新增 "),e("code",[t._v("match")]),t._v(" 属性，开发者不再需要手动通过正则二次获取指令参数匹配值")])],1)])])}),[],!1,null,null,null);e.default=s.exports}}]);